{"ast":null,"code":"import _slicedToArray from \"/Users/user/Desktop/wether-app2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/wether-app2/src/components/WeatherContainer.js\";\nimport React, { useState } from \"react\";\nimport \"../styles/Weather.css\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nconst WeatherContainer = () => {\n  const API_KEY = \"e84884dd9d2c8f8b8265ab8dbfc002a4\";\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searcQuery = _useState2[0],\n        setSearchQuery = _useState2[1];\n\n  const _useState3 = useState({\n    temp: null,\n    humidity: null,\n    desc: null,\n    city: null\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weatherData = _useState4[0],\n        setWeatherData = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isValidCityName = _useState6[0],\n        setIsValidCityName = _useState6[1];\n\n  const updateSearchQuery = e => {\n    let CityName = e.target.value;\n    let isValid = setIsValidCityName(CityName);\n    setSearchQuery(CityName);\n\n    if (isValid || CityName === \"\") {\n      setIsValidCityName(true);\n    } else {\n      setIsValidCityName(false);\n    }\n  };\n\n  const validateCityName = CityName => {\n    // let regex = /[0-9]{5}/;\n    let regex = /[A-Za-z0-9]/;\n    return regex.test(CityName);\n  }; //// get data(weather information) from openweathermap.org ////\n\n\n  const getWeatherData = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searcQuery},nl&appid=${API_KEY}`).then(res => res.json()).then(data => setWeatherData({\n      temp: convertToSantigrad(data.main.temp),\n      humidity: data.main.humidity,\n      desc: data.weather[0].main,\n      city: data.name\n    }));\n  }; // kelvein to santigrad //\n\n\n  const convertToSantigrad = temp => {\n    return (temp - 273.15).toFixed(0);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"weather-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"weather-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Weather\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"City Name\",\n    className: \"search-input\",\n    onChange: updateSearchQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: getWeatherData,\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"search\"))), React.createElement(\"section\", {\n    className: \"weather-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, weatherData.temp === null ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"No Weather to Display\", React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"wb_sunny\")) : React.createElement(WeatherInfo, {\n    data: weatherData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nexport default WeatherContainer;","map":{"version":3,"sources":["/Users/user/Desktop/wether-app2/src/components/WeatherContainer.js"],"names":["React","useState","WeatherInfo","WeatherContainer","API_KEY","searcQuery","setSearchQuery","temp","humidity","desc","city","weatherData","setWeatherData","isValidCityName","setIsValidCityName","updateSearchQuery","e","CityName","target","value","isValid","validateCityName","regex","test","getWeatherData","fetch","then","res","json","data","convertToSantigrad","main","weather","name","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Weather.css\";\nimport WeatherInfo from \"./WeatherInfo\";\nconst WeatherContainer = () => {\n  const API_KEY = \"e84884dd9d2c8f8b8265ab8dbfc002a4\";\n  const [searcQuery, setSearchQuery] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({\n    temp: null,\n    humidity: null,\n    desc: null,\n    city: null\n  });\n\n  const [isValidCityName, setIsValidCityName] = useState(true);\n\n  const updateSearchQuery = e => {\n    let CityName = e.target.value;\n    let isValid = setIsValidCityName(CityName);\n    setSearchQuery(CityName);\n    if (isValid || CityName === \"\" ) {\n      setIsValidCityName(true);\n    } else {\n      setIsValidCityName(false);\n    }\n  };\n\n  const validateCityName = CityName => {\n    // let regex = /[0-9]{5}/;\n    let regex = /[A-Za-z0-9]/;\n    return regex.test(CityName);\n  };\n\n//// get data(weather information) from openweathermap.org ////\n  const getWeatherData = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searcQuery},nl&appid=${API_KEY}`)\n    .then(res => res.json())\n    .then(data => setWeatherData({\n    temp: convertToSantigrad(data.main.temp),\n    humidity: data.main.humidity,\n    desc: data.weather[0].main,\n    city: data.name\n    }))\n  }\n  // kelvein to santigrad //\n   const convertToSantigrad = (temp) => {\n     return(temp - 273.15).toFixed(0);\n   }\n\n  return (\n    <section className=\"weather-container\">\n      <header className=\"weather-header\">\n        <h3>Weather</h3>\n        <div>\n          <input\n            placeholder=\"City Name\"\n            className=\"search-input\"\n            onChange={updateSearchQuery}\n          />\n          <button onClick={getWeatherData} className=\"material-icons\">search</button>\n        </div>\n      </header>\n      {/* <p className=\"error\">{isValidCityName === true ? \"\" : \"Invalid City\"}</p> */}\n      <section className=\"weather-info\">\n        {weatherData.temp === null ? (\n          <p>\n            No Weather to Display<i className=\"material-icons\">wb_sunny</i>\n          </p>\n        ) : (\n        <WeatherInfo data={weatherData} />\n        )}\n      </section>\n    </section>\n  );\n};\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}